//creat Git rep
	1.	mkdir xxx
	2.	cd xxx
	3.	git init
	4.	git log (--pretty=online)	//to check the history of git work
	4.1	git commit -a	//提交全部
<<<<<<< HEAD
	5.	git add xxx -m "change explaination"	// git add your file then commit your file
		git push -u origin master	// push local repo to remote repo

	6.	git reset --hard HEAD^	//回退到当前版本的前一个版本^, ^^前两个版本
		git reflog			//记录每一次的git 命令作为参考
=======
>>>>>>> a0d81d0427cc3f6db6dab353386ed4b69d996794

//creat a file to track, do not use Window word to open any file
	1.	rejected by GitHub
			 ! [rejected]        master -> master (non-fast forward)  
		non-fast forward: 仓库中已经有部分代码，所以不允许你直接把你的代码覆盖上去，2种解决办法：
			1)	git push -f
			2)	先把git东西fetch到本地，然后merge, 然后再push
				git fetch
				git merge

				这2句命令等价于	git pull

				result: git pull is Ok to sync up with remote repo, but git fetch& git merge NOK


	2.	git diff yourfile.txt
	3.	test sync-up with local repo
	
	
// Git branch

1.	git checkout -b dev		//create and switch to a new branch 'dev'
		-b = creat and switch
				git brach dev
				git checkout dev
				
2.	git branch		// check current branch

3.	git merge dev	//meger dev branch to Mater branch
4.	git branch -d dev	//deleter dev branch

Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>


